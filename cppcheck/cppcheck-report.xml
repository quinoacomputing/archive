<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.76.1"/>
    <errors>
        <error id="unreachableCode" severity="style" msg="Statements following return, break, continue, goto or throw will never be executed." verbose="Statements following return, break, continue, goto or throw will never be executed." cwe="561">
            <location file0="/tmp/q/quinoa/src/Base/VectorReducer.C" file="/tmp/q/quinoa/src/Base/ContainerUtil.h" line="35"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following return, break, continue, goto or throw will never be executed." verbose="Statements following return, break, continue, goto or throw will never be executed." cwe="561">
            <location file0="/tmp/q/quinoa/src/Base/VectorReducer.C" file="/tmp/q/quinoa/src/Base/ContainerUtil.h" line="125"/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999." verbose="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" cwe="570">
            <location file0="/tmp/q/quinoa/src/DiffEq/DiffEqStack.C" file="/tmp/q/quinoa/src/DiffEq/MixMassFractionBetaCoeffPolicy.h" line="184"/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999." verbose="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" cwe="570">
            <location file0="/tmp/q/quinoa/src/DiffEq/DiffEqStack.C" file="/tmp/q/quinoa/src/DiffEq/MixMassFractionBetaCoeffPolicy.h" line="283"/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999." verbose="Logical conjunction always evaluates to false: v &lt; 1.0e-8 &amp;&amp; v &gt; 0.99999999. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" cwe="570">
            <location file0="/tmp/q/quinoa/src/DiffEq/DiffEqStack.C" file="/tmp/q/quinoa/src/DiffEq/MixNumberFractionBetaCoeffPolicy.h" line="150"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/DiffEq/DiffEqStack.C" file="/tmp/q/quinoa/src/DiffEq/DiffEq.h" line="112"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/DiffEq/DiffEqStack.C" file="/tmp/q/quinoa/src/DiffEq/DiffEq.h" line="66"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/GmshMeshReader.C" file="/tmp/q/quinoa/src/IO/GmshMeshReader.h" line="34"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/HyperMeshReader.C" file="/tmp/q/quinoa/src/IO/HyperMeshReader.h" line="29"/>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function stoi() is not used." verbose="Return value of function stoi() is not used." cwe="252">
            <location file="/tmp/q/quinoa/src/IO/MeshFactory.C" line="51"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/MeshFactory.C" file="/tmp/q/quinoa/src/IO/GmshMeshReader.h" line="34"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/MeshFactory.C" file="/tmp/q/quinoa/src/IO/NetgenMeshReader.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/MeshFactory.C" file="/tmp/q/quinoa/src/IO/HyperMeshReader.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/MeshFactory.C" file="/tmp/q/quinoa/src/IO/NetgenMeshWriter.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/NetgenMeshReader.C" file="/tmp/q/quinoa/src/IO/NetgenMeshReader.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/NetgenMeshWriter.C" file="/tmp/q/quinoa/src/IO/NetgenMeshWriter.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/IO/STLTxtMeshReader.C" file="/tmp/q/quinoa/src/IO/STLTxtMeshReader.h" line="29"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_it&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_it&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_itf&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_itf&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_stage&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_stage&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_nvol&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_nvol&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_nhsol&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_nhsol&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_nlsol&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_nlsol&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_naec&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_naec&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_nalw&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_nalw&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_nlim&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_nlim&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Carrier::m_ncarr&apos; is not initialized in the constructor." verbose="Member variable &apos;Carrier::m_ncarr&apos; is not initialized in the constructor." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Carrier.C" file="/tmp/q/quinoa/src/Inciter/Carrier.h" line="158"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Transporter&apos; does not have a constructor." verbose="The class &apos;Transporter&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file0="/tmp/q/quinoa/src/Inciter/Transporter.C" file="/tmp/q/quinoa/src/Inciter/Transporter.h" line="66"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Main&apos; does not have a constructor." verbose="The class &apos;Main&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file="/tmp/q/quinoa/src/Main/Inciter.C" line="112"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Main&apos; does not have a constructor." verbose="The class &apos;Main&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file="/tmp/q/quinoa/src/Main/MeshConv.C" line="45"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Main&apos; does not have a constructor." verbose="The class &apos;Main&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file="/tmp/q/quinoa/src/Main/RNGTest.C" line="176"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Main&apos; does not have a constructor." verbose="The class &apos;Main&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file="/tmp/q/quinoa/src/Main/UnitTest.C" line="177"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Main&apos; does not have a constructor." verbose="The class &apos;Main&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file="/tmp/q/quinoa/src/Main/Walker.C" line="151"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/PDE/PDEStack.C" file="/tmp/q/quinoa/src/PDE/PDE.h" line="192"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/PDE/PDEStack.C" file="/tmp/q/quinoa/src/PDE/PDE.h" line="73"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;msum&apos; should be passed by reference." verbose="Parameter &apos;msum&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/Particles/Tracker.C" file="/tmp/q/quinoa/src/Particles/Tracker.h" line="136"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;msum&apos; should be passed by reference." verbose="Parameter &apos;msum&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/Particles/Tracker.C" file="/tmp/q/quinoa/src/Particles/Tracker.h" line="236"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNG/RNGStack.C" file="/tmp/q/quinoa/src/RNG/RNG.h" line="102"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNG/RNGStack.C" file="/tmp/q/quinoa/src/RNG/RNG.h" line="54"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/BigCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/BigCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/BigCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/Crush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/Crush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/Crush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/SmallCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/SmallCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/SmallCrush.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Stack.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Stack.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Stack.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always false because &apos;else if&apos; condition matches previous condition at line 111." verbose="Expression is always false because &apos;else if&apos; condition matches previous condition at line 111." cwe="398">
            <location file="/tmp/q/quinoa/src/RNGTest/TestU01Stack.C" line="117"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always false because &apos;else if&apos; condition matches previous condition at line 113." verbose="Expression is always false because &apos;else if&apos; condition matches previous condition at line 113." cwe="398">
            <location file="/tmp/q/quinoa/src/RNGTest/TestU01Stack.C" line="119"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Model&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;x&apos; should be passed by reference." verbose="Parameter &apos;x&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/StatTest.h" line="88"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;t&apos; should be passed by reference." verbose="Parameter &apos;t&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/TestU01Suite.h" line="111"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;r&apos; should be passed by reference." verbose="Parameter &apos;r&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/TestU01Suite.h" line="111"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p&apos; should be passed by reference." verbose="Parameter &apos;p&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file0="/tmp/q/quinoa/src/RNGTest/TestU01Suite.C" file="/tmp/q/quinoa/src/RNGTest/TestU01Suite.h" line="111"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;suite&apos; should be passed by reference." verbose="Parameter &apos;suite&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="/tmp/q/quinoa/src/UnitTest/Assessment.C" line="54"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Distributor&apos; does not have a constructor." verbose="The class &apos;Distributor&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file0="/tmp/q/quinoa/src/Walker/Collector.C" file="/tmp/q/quinoa/src/Walker/Distributor.h" line="78"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Collector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Collector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/Walker/Collector.C" file="/tmp/q/quinoa/src/Walker/Collector.h" line="46"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Distributor&apos; does not have a constructor." verbose="The class &apos;Distributor&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file0="/tmp/q/quinoa/src/Walker/Distributor.C" file="/tmp/q/quinoa/src/Walker/Distributor.h" line="78"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &apos;Distributor&apos; does not have a constructor." verbose="The class &apos;Distributor&apos; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398">
            <location file0="/tmp/q/quinoa/src/Walker/Integrator.C" file="/tmp/q/quinoa/src/Walker/Distributor.h" line="78"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Collector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Collector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/tmp/q/quinoa/src/Walker/Integrator.C" file="/tmp/q/quinoa/src/Walker/Collector.h" line="46"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;elemCommMaps&apos; is never used." verbose="The function &apos;elemCommMaps&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LoadBalance/CommMap.C" line="130"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;genEdsup&apos; is never used." verbose="The function &apos;genEdsup&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/Mesh/DerivedData.C" line="205"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;genEsued&apos; is never used." verbose="The function &apos;genEsued&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/Mesh/DerivedData.C" line="700"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;genEsuel&apos; is never used." verbose="The function &apos;genEsuel&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/Mesh/DerivedData.C" line="489"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;genInedel&apos; is never used." verbose="The function &apos;genInedel&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/Mesh/DerivedData.C" line="579"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;genInpoed&apos; is never used." verbose="The function &apos;genInpoed&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/Mesh/DerivedData.C" line="309"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCoordinatesViewOf&apos; is never used." verbose="The function &apos;getCoordinatesViewOf&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LinSys/ZoltanInterOp.C" line="81"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDimension&apos; is never used." verbose="The function &apos;getDimension&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LinSys/ZoltanInterOp.C" line="70"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getIDsViewOf&apos; is never used." verbose="The function &apos;getIDsViewOf&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LinSys/ZoltanInterOp.C" line="59"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getLocalNumOf&apos; is never used." verbose="The function &apos;getLocalNumOf&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LinSys/ZoltanInterOp.C" line="53"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTopologyViewOf&apos; is never used." verbose="The function &apos;getTopologyViewOf&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LinSys/ZoltanInterOp.C" line="64"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;poinCommMaps&apos; is never used." verbose="The function &apos;poinCommMaps&apos; is never used." cwe="561">
            <location file="/tmp/q/quinoa/src/LoadBalance/CommMap.C" line="28"/>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
